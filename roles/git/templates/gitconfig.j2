[hub]
        protocol = https
[user]
        name = {{ full_name }}
        email = {{ git_email }}
{% if git_signing_key %}
        signingkey = {{ git_signing_key }}
{% endif %}
{% if ansible_os_family == 'Darwin' %}
[credential]
        helper = osxkeychain
{% endif %}
[alias]
        a = add
        st = status
        s = status
        co = checkout
        cob = checkout -b
        c = checkout
        ci = commit
        noff = merge --no-ff
        amend = commit --amend
        wip = commit -am "WIP"
        br = branch
        # diff-so-fancy
        # https://github.com/so-fancy/diff-so-fancy/#usage
        df = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
        dfs = df --staged
        # Get changes for a single commit
        dfc = "!dfc() { git df $1^ $1; }; dfc"

        please = push --force-with-lease

        # http://gggritso.com/human-git-aliases
        unstage = reset -q HEAD --
        discard = checkout --
        uncommit = reset --mixed HEAD~

        l = log --graph --decorate --oneline --abbrev-commit --all
        h = log --graph --decorate --oneline --abbrev-commit

        issues = !hub browse -- issues
        url = "!f() { sha=$(git rev-parse ${1:-HEAD}); hub browse -u -- commit/$sha; }; f"
        # Copy current branch name to clipboard (MacOSX only)
        cb = "!git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy"

        remote-branches = "!f() { git ls-remote --heads ${1:origin} | sed 's?.*refs/heads/??'; }; f "

        # Git flow
        feature = flow feature start
        finfeature = flow feature finish
        fix = flow hotfix start
        finfix = flow hotfix finish
        release = flow release start
        finrelease = flow release finish

        sub = submodule
[color]
        diff = auto
        status = auto
        branch = auto
        ui = true
[core]
        excludesfile = ~/.gitignore_global
        editor = nvim
[apply]
        whitespace = nowarn
[mergetool]
        keepBackup = false
[difftool]
        prompt = false
[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to surpress warning message
        default = simple
[github]
        user = {{ git_user }}
{% if git_signing_key %}
[commit]
        gpgsign = true
{% endif %}
